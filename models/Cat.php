<?php


namespace app\models;


use trntv\filekit\behaviors\UploadBehavior;
use Yii;
use yii\db\ActiveRecord;
use yii\helpers\ArrayHelper;

class Cat extends ActiveRecord
{
//    public $img_path ='';
//    public $img_name ='';
    public $img_url ='';


    public $uploadFilesFolder = 'uploads/files'; //ที่เก็บไฟล์

    public $search;
    public $img_file ='';
    public function behaviors()
    {
        return [
            'img_file' => [
                'class' => UploadBehavior::className(),
                'attribute' => 'img_file',
//                'pathAttribute' => 'image_path',
//                'nameAttribute' => 'image',
//                'baseUrlAttribute' => 'img_url',

            ],
        ];
    }

//    public function beforeSave($insert)
//    {
//        if($this->image_path==null){
//            $this->image_path = $this->img_file['base_url']."/".$this->img_file['path'];
//            //parent::beforeSave('image_path', $this->image_path); // TODO: Change the autogenerated stub
//
//        }
//        return parent::beforeSave($insert);
//    }

    public static function tableName()
    {
        return 'cat';
    }
    public function rules()
    {
        return [
            [['name','type','father','mother','color','weight'
            ,'farm','age','birthday','birthday_farm','food','cost_price','price'],'required','message'=>'กรุณากรอก {attribute}'],
            [['image_path','image','img_url','img_file','fa_image_path','fa_image','fa_ped_image_path','fa_ped_image','mo_image_path','mo_image','mo_ped_image_path','mo_ped_image','ped_image_path','ped_image','vaccine_image_path','vaccine_image'], 'safe'],
            [['age','birthday_farm','birthday','vaccine_day','status'], 'safe'],
            [['pattern','blame','special','vaccine','food'],'safe'],
            [['name','type','father','mother','farm','gender','color','veterinary','pass'], 'string'],
            [['weight','cost_price','price'],'double'],
            [['video'], 'file', 'maxFiles' => 10],





        ];
    }
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'ชื่อ',
            'type' => 'พันธุ์',
            'father' => 'พ่อพันธุ์',
            'fa_image' => 'รูปพ่อพันธุ์',
            'fa_image_path' => 'รูปพ่อพันธุ์',
            'fa_ped_image_path' => 'ใบเพ็ดพ่อพันธุ์',
            'fa_ped_image' => 'ใบเพ็ดพ่อพันธุ์',
            'mother' => 'แม่พันธุ์',
            'mo_image' => 'รูปแม่พันธุ์',
            'mo_image_path' => 'รูปแม่พันธุ์',
            'mo_ped_image_path' => 'ใบเพ็ดแม่พันธุ์',
            'mo_ped_image' => 'ใบเพ็ดแม่พันธุ์',
            'ped_image' => 'ใบเพ็ด',
            'ped_image_path' => 'ใบเพ็ด',
            'farm' => 'ฟาร์ม',
            'age' => 'อายุ',
            'gender' => 'เพศ',
            'birthday_farm' => 'วัน เดือน ปีที่ซื้อจากฟาร์ม',
            'birthday' => 'วันเกิด',
            'weight' => 'น้ำหนัก',
            'color' => 'สี',
            'pattern' => 'ลาย',
            'blame' =>'ตำหนิ',
            'special' => 'ลักษณะพิเศษ',
            'vaccine' => 'วัคซีน',
            'vaccine_day' => 'วันที่ฉีดวัคซีน',
            'vaccine_image' => 'รูปภาพวัคซีน',
            'vaccine_image_path' => 'vaccine_image_path',
            'veterinary' => 'ชื่อสัตวแพทย์',
            'image' => 'image',
            'img_path' => 'รูปภาพ',
            'img_name' => 'รูปภาพ',
            'img_file' => 'รูปภาพ',
            'img_url' => 'รูปภาพ',
            'video' => 'วิดีโอ',
            'food' => 'อาหารที่กินปัจจุบัน',
            'cost_price' => 'ราคาทุน',
            'price' => 'ราคา',
            'status'=> 'สเตตัส',
            'pass' => 'Cat_id'
        ];
    }
    public static function getIdCatForSelect(){
        $data = self::find()->select(['id'])->asArray()->all();
        return ArrayHelper::map($data,'id','id');
    }
    public static function getDetail($id)
    {
        $model = self::find()
            ->select(['name'])
            ->where(['id' => $id])
            ->asArray()->all();
        return $model;
    }

    public function getDetailNonStatic()
    {
        $model = self::find()
            ->select(['name'])
            ->where(['id' => $this->id])
            ->one();
        return $model;
    }

    public function getDetailNonStatic1($id)
    {
        $model = self::find()
//            ->select(['name'])
            ->where(['id' => $id])
            ->one();
        return $model;
    }


    public static function getReview()
    {
        $data = Cat::find()
            ->select(['order.user_id as user_id','order.user_name as user_name','order.cat_id as cat_id','cat.name as cat_name','cat.type as cat_type'])
            ->innerJoin('order', 'cat.id = order.cat_id')
            ->groupBy(['cat.id'])
            ->asArray()->all();
        return $data;
    }
    public static function getString($data){
        if ($data == "")
        {
            return $data = '-';
        }else{
            return $data;
        }
    }
    public function uploadFiles(){
        $filesName = []; //กำหนดชื่อไฟล์ที่จะ return
        if($this->validate()){
            if($this->video){
                foreach($this->video as $file){
//                    $fileName = substr(md5(rand(1,1000).time()),0,15).'.'.$file->extension;//เลือกมา 15 อักษร .นามสกุล
//$fileName = iconv('UTF-8','WINDOWS-874',$file->baseName).'.'.$file->extension; //ใช้ไฟล์ภาษาไทย
                    $file->saveAs('../web/uploads/files/'.$file);

                    $filesName[] = $file;
                }




                if($this->isNewRecord){ //ถ้าเป็นการเพิ่ม Record ใหม่ให้บันทึกไฟล์ aaa.aaa,bbb.bbb ....
                    return implode(',', $filesName);
                }else{//ถ้าเป็นการปรับปรุงให้เพิ่มจากของเดิม
//                    return implode(',', ArrayHelper::merge($filesName, $this->getOldAttribute('video') ? explode(',', $this->getOldAttribute('files')) : []));
                    return implode(',', $filesName);
                }
            }//end files upload

        }//end validate
        return $this->isNewRecord ? false : $this->getOldAttribute('files'); //ถ้าไม่มีการ upload ให้ใช้ข้อมูลเดิม
    }

    public static function getDateFarm($data){

        $model = self::find()
            ->where("birthday_farm < '$data' and status=1")
            ->all();
        return $model;

    }

    static public function genderToString($data)
    {
        if ($data == 1) {
            return $data = 'ผู้';
        } elseif ($data == 2){
            return $data = 'เมีย';
        }
    }


}